{"version":3,"sources":["webpack:///./src/pages/why.js","webpack:///./node_modules/styled-icons/fa-brands/Twitter/Twitter.esm.js","webpack:///./node_modules/styled-icons/typicons/Heart/Heart.esm.js","webpack:///./src/components/contributors.js"],"names":["WhyPage","invertHeader","hideSearch","title","description","className","to","href","target","rel","Twitter","props","ref","iconAttrs","iconVerticalAlign","iconViewBox","fill","d","key","displayName","Heart","data","helpers","allContributorsJson","size","map","person","name","replace","twitter"],"mappings":"6FAAA,gFA0EeA,UAnEC,kBACd,kBAAC,IAAD,CAAQC,cAAc,EAAMC,YAAY,GACtC,kBAAC,IAAD,CAAKC,MAAM,2CAA2CC,YAAY,gJAElE,yBAAKC,UAAU,gCACb,wBAAIA,UAAU,YAAd,sCACA,yBAAKA,UAAU,YACf,uBAAGA,UAAU,cAAb,6PAMA,wBAAIA,UAAU,mBACZ,mIAIA,+CACkB,kBAAC,OAAD,CAAMC,GAAI,eAAV,cADlB,8BAIA,8IAIA,wKAMF,8HAE2B,IACzB,uBACEC,KAAK,0KACLC,OAAO,SACPC,IAAI,uBAHN,mBAMK,IATP,kCAaA,wBAAIJ,UAAU,mCAAd,oCACA,4DACA,wBAAIA,UAAU,mBACZ,oJAIA,8HAIA,gKAMF,kBAAC,IAAD,U,qHClEKK,EAAU,cAAiB,SAAUC,EAAOC,GAKrD,OAAO,gBAAoB,IAAgB,YAAS,CAClDC,UALU,CACV,KAAQ,eACR,MAAS,8BAITC,kBAAmB,UACnBC,YAAa,eACZJ,EAAO,CACRC,IAAKA,IACH,gBAAoB,OAAQ,CAC9BI,KAAM,eACNC,EAAG,0xBACHC,IAAK,WAGTR,EAAQS,YAAc,UACf,IClBIC,EAAQ,cAAiB,SAAUT,EAAOC,GAKnD,OAAO,gBAAoB,IAAgB,YAAS,CAClDC,UALU,CACV,KAAQ,eACR,MAAS,8BAITC,kBAAmB,SACnBC,YAAa,aACZJ,EAAO,CACRC,IAAKA,IACH,gBAAoB,OAAQ,CAC9BK,EAAG,yIACHC,IAAK,WAGTE,EAAMD,YAAc,QACb,I,YCbQ,eACb,IAAIE,EAAI,OAcR,OAFAA,EAAOC,UAAgBD,EAAKE,qBAG1B,oCACE,wBAAIlB,UAAU,wBAAd,MACK,kBAACe,EAAD,CAAOI,KAAK,SADjB,UAGA,0GAKA,wBAAInB,UAAU,mBACXgB,EAAKI,KAAI,SAAAC,GAAM,OACd,wBAAIrB,UAAU,OAAOa,IAAKQ,EAAOC,KAAKC,QAAQ,IAAK,KAChDF,EAAOC,KAAM,IACbD,EAAOG,SACN,uBACEtB,KAAI,uBAAyBmB,EAAOG,QACpCrB,OAAO,SACPC,IAAI,sBACJJ,UAAU,kBAEV,kBAACK,EAAD,CAASc,KAAK,OACd,kCAAQE,EAAOG,kB","file":"component---src-pages-why-js-17394ebd1ee38e0107e4.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Contributors from '../components/contributors'\n\nconst WhyPage = () => (\n  <Layout invertHeader={true} hideSearch={true}>\n    <SEO title='Why Postmark built the SMTP Field Manual' description='Postmark built the SMTP Field Manual to provide a single resource for both documented and undocumented SMTP codes from the major providers.' />\n\n    <div className='container u-push-top content'>\n      <h1 className='u-center'>Why we built the SMTP Field Manual</h1>\n      <div className='divider'></div>\n      <p className='u-push-top'>\n        ISPs (like Gmail, Office 365) will send responses back about the success\n        or problems for the messages you send. Even in the industry, these\n        responses are both misunderstood and not well documented. To make this\n        easier, we built SMTP Field Manual to:\n      </p>\n      <ul className='columns-diamond'>\n        <li>\n          Provide a single resource for both documented and undocumented SMTP\n          codes from the major providers.\n        </li>\n        <li>\n          Allow people to <Link to={'/contribute'}>contribute</Link> to changes\n          in SMTP codes.\n        </li>\n        <li>\n          Bring clarity on what actions people should take for common SMTP Codes\n          (hard bounce, soft bounce, block, etc).\n        </li>\n        <li>\n          Bring these codes to the surface. Some ESPs (We won't name names ;) )\n          like to bury this information since it is telling about delivery.\n        </li>\n      </ul>\n\n      <p>\n        We hope this becomes a valuable resource for anyone who relies on email\n        delivery. Please help us{' '}\n        <a\n          href='https://twitter.com/intent/tweet?url=https://smtpfieldmanual.com&text=See%20raw%20SMTP%20responses%20from%20major%20email%20providers%20and%20spam%20filter%20services.'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          spread the word\n        </a>{' '}\n        to make it even more valuable.\n      </p>\n\n      <h2 className='response-list-header u-push-top'>Who the SMTP Field Manual is for</h2>\n      <p>This resource is perfect for:</p>\n      <ul className='columns-diamond'>\n        <li>\n          Customer Support – Make sense of that bounce message so you can tell\n          your customer what happened, and how to fix it.\n        </li>\n        <li>\n          Email Server Administrators – Follow best practices to standardize\n          SMTP responses across ISPs.\n        </li>\n        <li>\n          Email Deliverability Teams – Keep up to date on changes to SMTP\n          responses, what they mean, and help contribute to the resource.\n        </li>\n      </ul>\n\n      <Contributors />\n    </div>\n  </Layout>\n)\n\nexport default WhyPage\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { StyledIconBase } from '../../StyledIconBase';\nexport var Twitter = React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return React.createElement(StyledIconBase, __assign({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"-.125em\",\n    iconViewBox: \"0 0 512 512\"\n  }, props, {\n    ref: ref\n  }), React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z\",\n    key: \"k0\"\n  }));\n});\nTwitter.displayName = 'Twitter';\nexport var TwitterDimensions = {\n  height: undefined,\n  width: undefined\n};","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { StyledIconBase } from '../../StyledIconBase';\nexport var Heart = React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return React.createElement(StyledIconBase, __assign({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), React.createElement(\"path\", {\n    d: \"M12 10.375a4.375 4.375 0 00-8.75 0c0 1.127.159 2.784 1.75 4.375L12 20s5.409-3.659 7-5.25 1.75-3.248 1.75-4.375a4.375 4.375 0 00-8.75 0\",\n    key: \"k0\"\n  }));\n});\nHeart.displayName = 'Heart';\nexport var HeartDimensions = {\n  height: 24,\n  width: 24\n};","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Twitter } from 'styled-icons/fa-brands/Twitter'\nimport { Heart } from 'styled-icons/typicons/Heart'\n\nimport * as helpers from '../utils/helpers'\n\nexport default () => {\n  let data = useStaticQuery(graphql`\n    {\n      allContributorsJson {\n        edges {\n          node {\n            name\n            twitter\n          }\n        }\n      }\n    }\n  `)\n  data = helpers.flatten(data.allContributorsJson)\n\n  return (\n    <>\n      <h2 className='response-list-header'>\n        We <Heart size='22px' /> email\n      </h2>\n      <p>\n        Thanks to all the fine folks who have contributed to the SMTP Field\n        Manual.\n      </p>\n\n      <ul className='columns-diamond'>\n        {data.map(person => (\n          <li className='slim' key={person.name.replace(' ', '')}>\n            {person.name}{' '}\n            {person.twitter && (\n              <a\n                href={`https://twitter.com/${person.twitter}`}\n                target='_blank'\n                rel='noopener noreferrer'\n                className='twitter-handle'\n              >\n                <Twitter size='12' />\n                <span>@{person.twitter}</span>\n              </a>\n            )}\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n}\n"],"sourceRoot":""}